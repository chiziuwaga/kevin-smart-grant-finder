"""Add all EnrichedGrant fields to database model

Revision ID: cceae33975fa
Revises: d896bf2738fb
Create Date: 2025-07-09 15:48:45.941784

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'cceae33975fa'
down_revision: Union[str, None] = 'd896bf2738fb'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('grants', sa.Column('grant_id_external', sa.String(), nullable=True))
    op.add_column('grants', sa.Column('summary_llm', sa.String(), nullable=True))
    op.add_column('grants', sa.Column('eligibility_summary_llm', sa.String(), nullable=True))
    op.add_column('grants', sa.Column('funder_name', sa.String(), nullable=True))
    op.add_column('grants', sa.Column('funding_amount_min', sa.Float(), nullable=True))
    op.add_column('grants', sa.Column('funding_amount_max', sa.Float(), nullable=True))
    op.add_column('grants', sa.Column('funding_amount_exact', sa.Float(), nullable=True))
    op.add_column('grants', sa.Column('funding_amount_display', sa.String(), nullable=True))
    op.add_column('grants', sa.Column('deadline_date', sa.DateTime(), nullable=True))
    op.add_column('grants', sa.Column('application_open_date', sa.DateTime(), nullable=True))
    op.add_column('grants', sa.Column('keywords_json', sa.JSON(), nullable=True))
    op.add_column('grants', sa.Column('categories_project_json', sa.JSON(), nullable=True))
    op.add_column('grants', sa.Column('retrieved_at', sa.DateTime(), nullable=True))
    op.add_column('grants', sa.Column('specific_location_mentions_json', sa.JSON(), nullable=True))
    op.add_column('grants', sa.Column('sector_relevance_score', sa.Float(), nullable=True))
    op.add_column('grants', sa.Column('geographic_relevance_score', sa.Float(), nullable=True))
    op.add_column('grants', sa.Column('operational_alignment_score', sa.Float(), nullable=True))
    op.add_column('grants', sa.Column('business_logic_alignment_score', sa.Float(), nullable=True))
    op.add_column('grants', sa.Column('feasibility_context_score', sa.Float(), nullable=True))
    op.add_column('grants', sa.Column('strategic_synergy_score', sa.Float(), nullable=True))
    op.add_column('grants', sa.Column('compliance_summary_json', sa.JSON(), nullable=True))
    op.add_column('grants', sa.Column('feasibility_score', sa.Float(), nullable=True))
    op.add_column('grants', sa.Column('risk_assessment_json', sa.JSON(), nullable=True))
    op.add_column('grants', sa.Column('raw_source_data_json', sa.JSON(), nullable=True))
    op.add_column('grants', sa.Column('enrichment_log_json', sa.JSON(), nullable=True))
    op.add_column('grants', sa.Column('record_status', sa.String(), nullable=True))
    op.create_index(op.f('ix_grants_grant_id_external'), 'grants', ['grant_id_external'], unique=False)
    op.drop_column('grants', 'specific_location_mentions')
    op.drop_column('grants', 'enrichment_log')
    op.drop_column('grants', 'raw_source_data')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('grants', sa.Column('raw_source_data', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('grants', sa.Column('enrichment_log', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('grants', sa.Column('specific_location_mentions', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_grants_grant_id_external'), table_name='grants')
    op.drop_column('grants', 'record_status')
    op.drop_column('grants', 'enrichment_log_json')
    op.drop_column('grants', 'raw_source_data_json')
    op.drop_column('grants', 'risk_assessment_json')
    op.drop_column('grants', 'feasibility_score')
    op.drop_column('grants', 'compliance_summary_json')
    op.drop_column('grants', 'strategic_synergy_score')
    op.drop_column('grants', 'feasibility_context_score')
    op.drop_column('grants', 'business_logic_alignment_score')
    op.drop_column('grants', 'operational_alignment_score')
    op.drop_column('grants', 'geographic_relevance_score')
    op.drop_column('grants', 'sector_relevance_score')
    op.drop_column('grants', 'specific_location_mentions_json')
    op.drop_column('grants', 'retrieved_at')
    op.drop_column('grants', 'categories_project_json')
    op.drop_column('grants', 'keywords_json')
    op.drop_column('grants', 'application_open_date')
    op.drop_column('grants', 'deadline_date')
    op.drop_column('grants', 'funding_amount_display')
    op.drop_column('grants', 'funding_amount_exact')
    op.drop_column('grants', 'funding_amount_max')
    op.drop_column('grants', 'funding_amount_min')
    op.drop_column('grants', 'funder_name')
    op.drop_column('grants', 'eligibility_summary_llm')
    op.drop_column('grants', 'summary_llm')
    op.drop_column('grants', 'grant_id_external')
    # ### end Alembic commands ###
